# This is a Databricks asset bundle definition for {{.project_name}}.
# See https://docs.databricks.com/dev-tools/bundles/index.html for documentation.
bundle:
  name: {{.project_name}}

include:
  - resources/*.yml

# Variable declarations. These variables are assigned in the dev/prod targets below.
variables:
  warehouse_id:
    description: The warehouse to use
  catalog:
    description: The catalog to use
  schema:
    description: The schema to use

# Deployment targets.
targets:
  # The 'dev' target, for development purposes. This target is the default.
  dev:
    # We use 'mode: development' to indicate this is a personal development copy:
    # - Deployed resources get prefixed with '[dev my_user_name]'
    # - Any job schedules and triggers are paused by default
    # - The 'development' mode is used for Delta Live Tables pipelines
    mode: development
    default: true
    workspace:
      host: {{workspace_host}}
    variables:
      warehouse_id: {{index ((regexp "[^/]+$").FindStringSubmatch .http_path) 0}}
      catalog: {{.catalog}}
      schema: {{.schema}} # tip: use ${workspace.current_user.short_name} if you want your own schema

  ## Optionally, there could be a 'staging' target here.
  ## (See Databricks docs on CI/CD at https://docs.databricks.com/dev-tools/bundles/ci-cd.html.)
  #
  # staging:
  #   workspace:
  #     host: {{workspace_host}}

  # The 'prod' target, used for production deployment.
  prod:
    # We use 'mode: production' to indicate this is a production deployment.
    # Doing so enables strict verification of the settings below.
    mode: production
    workspace:
      host: {{workspace_host}}
      # We only have a single deployment copy for production, so we use a shared path.
      root_path: /Shared/.bundle/prod/${bundle.name}
    variables:
      warehouse_id: {{index ((regexp "[^/]+$").FindStringSubmatch .http_path) 0}}
      catalog: {{.catalog}}
      schema: {{.schema}}
    {{- if not is_service_principal}}
    run_as:
      # This runs as {{user_name}} in production. We could also use a service principal here
      # using service_principal_name (see https://docs.databricks.com/en/dev-tools/bundles/permissions.html).
      user_name: {{user_name}}
    {{end -}}
